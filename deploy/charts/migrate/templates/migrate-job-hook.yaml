apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-{{ .Release.Time.Seconds }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    helm.sh/hook: post-install,pre-upgrade
    helm.sh/hook-weight: "-1"
spec:
  template:
    metadata:
      name: migrate-{{ .Release.Time }}
    spec:
      restartPolicy: Never
      containers:
      - name: cloudsql-proxy
        image: "{{ .Values.global.cloudsql.image.repository }}:{{ .Values.global.cloudsql.image.tag }}"
        imagePullPolicy: {{ .Values.global.cloudsql.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          /cloud_sql_proxy -instances={{ .Values.global.cloudsql.instance }}=tcp:0.0.0.0:5432 -credential_file=/secrets/cloudsql/credentials.json &
          CHILD_PID=$!
          (while true; do if [[ -f "/tmp/pod/migrate-terminated" ]]; then kill $CHILD_PID; fi; sleep 1; done) &
          wait $CHILD_PID
          if [[ -f "/tmp/pod/migrate-terminated" ]]; then exit 0; fi
        ports:
        - containerPort: 5432
        readinessProbe:
          tcpSocket:
            port: 5432
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
        - name: tmp-pod
          mountPath: /tmp/pod
          readOnly: true
      - name: migrate
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          trap "touch /tmp/pod/migrate-terminated" EXIT
          wait-for-it localhost:5432 -- migrate -path /migrations -database $POSTGRES_URL up
        env:
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: migrate
              key: postgres.url
        resources: {{ toJson .Values.resources }}
        volumeMounts:
        - name: migrations
          mountPath: /migrations
          readOnly: true
        - name: tmp-pod
          mountPath: /tmp/pod
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: migrations
        configMap:
          name: migrations
      - name: tmp-pod
        emptyDir: {}
